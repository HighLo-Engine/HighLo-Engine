name: Windows Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .
  TEST_FILE_PATH: tests/

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release  
  BUILD_PLATFORM: x64

jobs:
  build:
    runs-on: windows-latest
    steps:
        - name: Get latest engine build
          uses: actions/checkout@v2
          with:
            lfs: true
            submodules: recursive

        - name: Add MSBuild to PATH
          uses: microsoft/setup-msbuild@v1.0.2
          
        - name: Generate Engine
            uses: actions/setup-python@v2
            with:
              python-version: 3.8 #install the python needed
          - name: download vulkan sdk and run the premake script # run the run.py to get the latest data
            run: |
              python GenerateEngine-Windows.py

        - name: Build Unit Tests
          working-directory: ${{env.GITHUB_WORKSPACE}}
          # Add additional options to the MSBuild command line here (like platform or verbosity level).
          # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
          run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /p:PostBuildEventUseInBuild=false ${{env.TEST_FILE_PATH}}
        
        - name: Copy DLLs
          run: |
            cd scripts
            .\CopyDlls.bat
            cd ..
            
        - name: Run Unit Tests
          run: |
            cd tests\bin\Release-windows-x86_64\HighLoTest
            .\HighLoTest.exe
            cd ..\..\..\..\
            
        